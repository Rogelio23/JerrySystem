@model Jerry.Models.Reservacion

@{
    ViewBag.Title = "CreateReservacion";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //int clienteID = ViewBag.clienteID;
}
<h2>CreateReservacion</h2>


@using (Html.BeginForm("create", "Reservacion")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Reservacion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("clienteID")
        @Html.Hidden("fechaReservacion",DateTime.Now)
        @*<div class="form-group">
            @Html.LabelFor(model => model.fechaReservacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaReservacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.Editor(DateTime.Now.ToShortTimeString(), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaReservacion, "", new { @class = "text-danger" })
            </div>
        </div>*@
           

            </div>
        <div class="form-group">
            @Html.LabelFor(model => model.fechaEventoInicial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="datetime-local" name="fechaEventoInicial" class="form-control"> 
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.fechaEventoFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.fechaEventoInicial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaEventoInicial, "", new { @class = "text-danger" })*@
                    <input type="datetime-local" name="fechaEventoFinal" class="form-control">
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.costo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.costo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.costo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Detalles, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Detalles, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Detalles, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.salonID, "salonID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("salonID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.salonID, "", new { @class = "text-danger" })
                </div>
            </div>

            @*Esta seccion ha sido comentada debido a que en esta version no es necesario poner un combobox para listar a los clientes
            se utilizara un hidenfor *@
            @*<div class="form-group">
                @Html.LabelFor(model => model.clienteID, "clienteID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("clienteID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.clienteID, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Reservar" class="btn btn-default" /> 
                    @*<div id="confirmBox">
                        <div class="message"></div>
                        <button class="yes">Yes</button>
                        <button class="no">No</button>
                    </div>

                    <button onclick='doConfirm("Are you sure?", function yes(){alert("YEs")}, function no(){alert("no")});'>
                        submit
                    </button>*@
                </div>
            </div>
        </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
